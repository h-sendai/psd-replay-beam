名前

psd_replay - NEUNETエミュレータ

使用方法

./psd_replay [-d] [-h ip_address] [-p port] [-s usleep] datafile

説明

NEUNETのプロトコルでデータを送信するエミュレータです。
データは、自前で作るわけではなく、datafileを読んでそれをその
まま送り出します。

datafileはどこかで実際に取得したデータファイルを利用するのが
簡単です。T0データはこのエミュレータでは発生させることができ
ません。T0データが必要ならT0データはdatafileに入っている必要
があります。

NEUNETはport 23を使用しますが、一般のUnixではport 23を使用
するにはroot権限が必要になるので、port 23456でlistenするように
しました。-p portでlistenするポートを変更することが可能です。

datafileを読み終わったらlength 0をクライアントに返し続けます。

オプション

-d        デバッグ出力を標準エラー出力に出す。

-h ip_address
          このサーバーがlisten()するIPアドレスを指定する。指定
          されなかった場合は全てのネットワークインターフェイス
          でlisten()する。

-p port   ポート番号portでlisten()する。指定しなかった場合の
          デフォルトは23456。

-s usleep データをソケットにwrite()する前にusleepマイクロ秒
          スリープする。転送速度を遅くするためのはなはだ適当
          な方法。

診断

psd_replay: (client exit?): Connection reset by peer

このサーバーが長さリクエストの受信を待っているときにクライアント側
からTCP RESETが送られてくると(クライアントがC-cで停止した場合など)
サーバーがこのメッセージを出します。

バグ

データファイルがないとなにもできない。イベントデータの生成は
どうにかなるかもしれないが、T0データの挿入はむずかしそう。

プログラムのバグではありませんが付属のMakefileは作者の趣味
でBSD makeの文法で書いてあります。

ファイルを読み終わったあとの動作。今はフラグを使ってEOFに
なったあとはread()しないようにしているが、EOFに達したファイル
を何度read()しても0が返ってくるだけでブロックなどしないので
read()させてその戻り値0をlengthとしてクライアントに送るほうが
フラグを使わなくてすむのでコードがすっきりするかもしれない。
が無意味にread()させるとシステムコール代が高くつくかもしれない。

想定されている利用目的

すでに性質がわかっているデータを利用してオンラインモニターの
使用感のテストなどに利用する。

ソースの出どころ

ネットワーク部分についてはStevensらの教科書Unix Netowork Programming
第3版に載っていたものをほぼそのまま使いました。

作者

千代浩司

変更履歴

* 2008-04-05
    - 第1版。とりあえず書いてみた。
    - lengthとdataで2回write()していたのをwritev()で1回にした。
    - 反復サーバーだったのをコンカレントサーバーに書き換えた。
    - ソケット関連(socket(), bind(), listen(), accept())の部分は
      他の用途でもできるだけそのまま使えるようにするために
      ファイルを読んでソケットに書く関数を分離して別ファイルにした。
    - 転送速度を遅くするためにwritev()の直前でusleep()するオプションを
      追加した。
